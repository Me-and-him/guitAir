'use strict';

;
(function () {

	// Changes canvas background size when fired
	function refreshComputedSizes(object) {

		canvOpts.computedStyle = {
			width: +object.width.slice(0, -2),
			height: +object.height.slice(0, -2)
		};

		canvas.setDimensions({
			width: canvOpts.computedStyle.width,
			height: canvOpts.computedStyle.height
		});
	}

	function onAgSetupEvent(event) {

		var audioFileURL = 'http://' + window.location.hostname + '/songs/' + event.song;

		currentAudio = new Howl({
			urls: [audioFileURL],
			autoplay: false,
			volume: 0.8
		});
	}

	// Mutes / unmutes audio
	function onVolumeBtnClick(event) {

		if (!currentAudio.muted) {
			this.childNodes[1].classList.remove('fa-volume-up');
			this.childNodes[1].classList.add('fa-volume-off');
			currentAudio.mute();
			currentAudio.muted = true;
		} else {
			this.childNodes[1].classList.remove('fa-volume-off');
			this.childNodes[1].classList.add('fa-volume-up');
			currentAudio.unmute();
			currentAudio.muted = false;
		}
		console.log(this);
	}

	function onVolumeSliderInput(event) {
		currentAudio.volume(this.value / 100);
	}

	// ********
	// * Init *
	// ********

	var currentAudio;

	// Get computed styles of whole page wrapper
	var canvasComputedStyleObj = getComputedStyle(document.querySelectorAll('.wr')[0]);

	// Set canvas options
	var canvOpts = {
		bgURL: '../img/bg-crowd-1.jpg',
		computedStyle: {
			width: +canvasComputedStyleObj.width.slice(0, -2),
			height: +canvasComputedStyleObj.height.slice(0, -2)
		}
	};

	// Initialize fabric canvas obj
	var canvas = new fabric.StaticCanvas('game', {
		width: canvOpts.computedStyle.width,
		height: canvOpts.computedStyle.height
	});

	// Set handler for game setup event
	document.addEventListener('agSetupEvent', onAgSetupEvent);

	// *********
	// * Audio *
	// *********

	// Add muted state saving feature to Howl (audio lib)
	Howl.prototype.muted = false;
	Howl.muted = false;

	// Get volume button element
	var volumeBtn = document.querySelectorAll('.volume-btn')[0];
	// and set onClick event handler
	volumeBtn.addEventListener('click', onVolumeBtnClick);

	// Get volume level slider
	var volumeSlider = document.querySelectorAll('.volume-input')[0];
	// and set onInput event handler
	volumeSlider.addEventListener('input', onVolumeSliderInput);

	// Change canvas background size on window resize
	window.onresize = function () {
		refreshComputedSizes(canvasComputedStyleObj);
		canvas.renderAll.bind(canvas);
	};

	// test

	// currentAudio = new Howl({
	// 		urls: ['../audio/12 Home.mp3'],
	// 		autoplay: false,
	// 		volume: 0.8,
	// 	});
	// currentAudio.play();

	document.addEventListener('click', function (e) {
		var score = document.querySelectorAll('.score')[0];
		var scoreNumber = document.querySelectorAll('.score-number')[0];

		score.classList.add('update');
		setTimeout(function () {
			score.classList.remove('update');
		}, 400);
		scoreNumber.innerHTML = parseInt(scoreNumber.innerHTML) + 123;
	});
})();
//# sourceMappingURL=data:application/json;base64,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LGVBQTFCLEVBQTJDLENBQTNDLENBQW5COztBQUVBLGNBQWEsZ0JBQWIsQ0FBOEIsT0FBOUIsRUFBdUMsbUJBQXZDOzs7QUFJQSxRQUFPLFFBQVAsR0FBa0IsWUFBVTtBQUMzQix1QkFBcUIsc0JBQXJCO0FBQ0EsU0FBTyxTQUFQLENBQWlCLElBQWpCLENBQXNCLE1BQXRCO0FBQ0EsRUFIRDs7Ozs7Ozs7Ozs7QUFrQkEsVUFBUyxnQkFBVCxDQUEwQixPQUExQixFQUFtQyxVQUFTLENBQVQsRUFBVztBQUM3QyxNQUFJLFFBQVEsU0FBUyxnQkFBVCxDQUEwQixRQUExQixFQUFvQyxDQUFwQyxDQUFaO0FBQ0EsTUFBSSxjQUFjLFNBQVMsZ0JBQVQsQ0FBMEIsZUFBMUIsRUFBMkMsQ0FBM0MsQ0FBbEI7O0FBRUEsUUFBTSxTQUFOLENBQWdCLEdBQWhCLENBQW9CLFFBQXBCO0FBQ0EsYUFBVyxZQUFJO0FBQUUsU0FBTSxTQUFOLENBQWdCLE1BQWhCLENBQXVCLFFBQXZCO0FBQW1DLEdBQXBELEVBQXNELEdBQXREO0FBQ0EsY0FBWSxTQUFaLEdBQXdCLFNBQVMsWUFBWSxTQUFyQixJQUFrQyxHQUExRDtBQUVBLEVBUkQ7QUFVQyxDQW5JRCIsImZpbGUiOiJyZW5kZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyI7XG4oZnVuY3Rpb24oKXtcblxuLy8gQ2hhbmdlcyBjYW52YXMgYmFja2dyb3VuZCBzaXplIHdoZW4gZmlyZWRcbmZ1bmN0aW9uIHJlZnJlc2hDb21wdXRlZFNpemVzKG9iamVjdCkge1xuXHRcblx0Y2Fudk9wdHMuY29tcHV0ZWRTdHlsZSA9IHtcblx0XHR3aWR0aDogK29iamVjdC53aWR0aC5zbGljZSgwLC0yKSxcblx0XHRoZWlnaHQ6ICtvYmplY3QuaGVpZ2h0LnNsaWNlKDAsLTIpXG5cdH07XG5cblx0Y2FudmFzLnNldERpbWVuc2lvbnMoe1xuXHRcdHdpZHRoOiBjYW52T3B0cy5jb21wdXRlZFN0eWxlLndpZHRoLFxuXHRcdGhlaWdodDogY2Fudk9wdHMuY29tcHV0ZWRTdHlsZS5oZWlnaHRcblx0fSk7XG5cbn1cblxuXG5mdW5jdGlvbiBvbkFnU2V0dXBFdmVudChldmVudCkge1xuXG5cdGxldCBhdWRpb0ZpbGVVUkwgPSAnaHR0cDovLycgKyB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUgKyAnL3NvbmdzLycgKyBldmVudC5zb25nO1xuXG5cdGN1cnJlbnRBdWRpbyA9IG5ldyBIb3dsKHtcblx0XHR1cmxzOiBbYXVkaW9GaWxlVVJMXSxcblx0XHRhdXRvcGxheTogZmFsc2UsXG5cdFx0dm9sdW1lOiAwLjgsXG5cdH0pO1xuXG59XG5cblxuLy8gTXV0ZXMgLyB1bm11dGVzIGF1ZGlvXG5mdW5jdGlvbiBvblZvbHVtZUJ0bkNsaWNrKGV2ZW50KSB7XG5cblx0aWYgKCFjdXJyZW50QXVkaW8ubXV0ZWQpIHtcblx0XHR0aGlzLmNoaWxkTm9kZXNbMV0uY2xhc3NMaXN0LnJlbW92ZSgnZmEtdm9sdW1lLXVwJyk7XG5cdFx0dGhpcy5jaGlsZE5vZGVzWzFdLmNsYXNzTGlzdC5hZGQoJ2ZhLXZvbHVtZS1vZmYnKTtcblx0XHRjdXJyZW50QXVkaW8ubXV0ZSgpO1xuXHRcdGN1cnJlbnRBdWRpby5tdXRlZCA9IHRydWU7XG5cdH0gZWxzZSB7XG5cdFx0dGhpcy5jaGlsZE5vZGVzWzFdLmNsYXNzTGlzdC5yZW1vdmUoJ2ZhLXZvbHVtZS1vZmYnKTtcblx0XHR0aGlzLmNoaWxkTm9kZXNbMV0uY2xhc3NMaXN0LmFkZCgnZmEtdm9sdW1lLXVwJyk7XG5cdFx0Y3VycmVudEF1ZGlvLnVubXV0ZSgpO1xuXHRcdGN1cnJlbnRBdWRpby5tdXRlZCA9IGZhbHNlO1xuXHR9XG5cdGNvbnNvbGUubG9nKHRoaXMpO1xuXG59XG5cbmZ1bmN0aW9uIG9uVm9sdW1lU2xpZGVySW5wdXQoZXZlbnQpIHtcblx0Y3VycmVudEF1ZGlvLnZvbHVtZSh0aGlzLnZhbHVlLzEwMCk7XG59XG5cblxuXG5cbi8vICoqKioqKioqXG4vLyAqIEluaXQgKlxuLy8gKioqKioqKipcblxudmFyIGN1cnJlbnRBdWRpbztcblxuLy8gR2V0IGNvbXB1dGVkIHN0eWxlcyBvZiB3aG9sZSBwYWdlIHdyYXBwZXJcbnZhciBjYW52YXNDb21wdXRlZFN0eWxlT2JqID0gZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcud3InKVswXSk7XG5cbi8vIFNldCBjYW52YXMgb3B0aW9uc1xudmFyIGNhbnZPcHRzID0ge1xuXHRiZ1VSTDogJy4uL2ltZy9iZy1jcm93ZC0xLmpwZycsXG5cdGNvbXB1dGVkU3R5bGU6IHtcblx0XHR3aWR0aDogK2NhbnZhc0NvbXB1dGVkU3R5bGVPYmoud2lkdGguc2xpY2UoMCwtMiksXG5cdFx0aGVpZ2h0OiArY2FudmFzQ29tcHV0ZWRTdHlsZU9iai5oZWlnaHQuc2xpY2UoMCwtMilcblx0fVxufVxuXG4vLyBJbml0aWFsaXplIGZhYnJpYyBjYW52YXMgb2JqXG52YXIgY2FudmFzID0gbmV3IGZhYnJpYy5TdGF0aWNDYW52YXMoJ2dhbWUnLCB7XG5cdHdpZHRoOiBjYW52T3B0cy5jb21wdXRlZFN0eWxlLndpZHRoLFxuXHRoZWlnaHQ6IGNhbnZPcHRzLmNvbXB1dGVkU3R5bGUuaGVpZ2h0LFxufSk7XG5cbi8vIFNldCBoYW5kbGVyIGZvciBnYW1lIHNldHVwIGV2ZW50XG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdhZ1NldHVwRXZlbnQnLCBvbkFnU2V0dXBFdmVudCk7XG5cbi8vICoqKioqKioqKlxuLy8gKiBBdWRpbyAqXG4vLyAqKioqKioqKipcblxuLy8gQWRkIG11dGVkIHN0YXRlIHNhdmluZyBmZWF0dXJlIHRvIEhvd2wgKGF1ZGlvIGxpYilcbkhvd2wucHJvdG90eXBlLm11dGVkID0gZmFsc2U7XG5Ib3dsLm11dGVkID0gZmFsc2U7XG5cbi8vIEdldCB2b2x1bWUgYnV0dG9uIGVsZW1lbnRcbnZhciB2b2x1bWVCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudm9sdW1lLWJ0bicpWzBdO1xuLy8gYW5kIHNldCBvbkNsaWNrIGV2ZW50IGhhbmRsZXJcbnZvbHVtZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uVm9sdW1lQnRuQ2xpY2spO1xuXG4vLyBHZXQgdm9sdW1lIGxldmVsIHNsaWRlclxudmFyIHZvbHVtZVNsaWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy52b2x1bWUtaW5wdXQnKVswXTtcbi8vIGFuZCBzZXQgb25JbnB1dCBldmVudCBoYW5kbGVyXG52b2x1bWVTbGlkZXIuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBvblZvbHVtZVNsaWRlcklucHV0KVxuXG5cbi8vIENoYW5nZSBjYW52YXMgYmFja2dyb3VuZCBzaXplIG9uIHdpbmRvdyByZXNpemVcbndpbmRvdy5vbnJlc2l6ZSA9IGZ1bmN0aW9uKCl7XG5cdHJlZnJlc2hDb21wdXRlZFNpemVzKGNhbnZhc0NvbXB1dGVkU3R5bGVPYmopO1xuXHRjYW52YXMucmVuZGVyQWxsLmJpbmQoY2FudmFzKTtcbn1cblxuXG5cblxuXG4vLyB0ZXN0XG5cbi8vIGN1cnJlbnRBdWRpbyA9IG5ldyBIb3dsKHtcbi8vIFx0XHR1cmxzOiBbJy4uL2F1ZGlvLzEyIEhvbWUubXAzJ10sXG4vLyBcdFx0YXV0b3BsYXk6IGZhbHNlLFxuLy8gXHRcdHZvbHVtZTogMC44LFxuLy8gXHR9KTtcbi8vIGN1cnJlbnRBdWRpby5wbGF5KCk7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSl7XG5cdHZhciBzY29yZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zY29yZScpWzBdO1xuXHR2YXIgc2NvcmVOdW1iZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2NvcmUtbnVtYmVyJylbMF07XG5cblx0c2NvcmUuY2xhc3NMaXN0LmFkZCgndXBkYXRlJyk7XG5cdHNldFRpbWVvdXQoKCk9Pnsgc2NvcmUuY2xhc3NMaXN0LnJlbW92ZSgndXBkYXRlJyk7IH0sIDQwMCk7XG5cdHNjb3JlTnVtYmVyLmlubmVySFRNTCA9IHBhcnNlSW50KHNjb3JlTnVtYmVyLmlubmVySFRNTCkgKyAxMjM7XG5cdFxufSlcblxufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
