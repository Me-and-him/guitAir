'use strict';

/**
 * connection.js
 *
 * Sets connection to the server.
 *
 * Emits 'agSetupEvent' and 'agCommandEvent' events that should be handled in
 * the view.
 * ``agSetupEvent``s set the song name and the command sequence.
 * ``agCommandEvent``s say which command user sent.
 */

(function () {
	// Set the connection to the mobile app.
	var host = "ws://" + response.ip + "/";
	var ws = new WebSocket(host);
	var songWasStarted = false;

	function onOpen() {
		// After we connect, the server sends us data which will be handled in
		// ``onmessage`` so we do nothing here.
	}

	function onClose(event) {
		if (!e.wasClean) {
			// Retry if connection failed.
			ws = new WebSocket(host);
			ws.onopen = onOpen;
			ws.onclose = onClose;
			if (!songWasStarted) {
				ws.onmessage = onGotMessageOnStart;
			} else {
				ws.onmessage = onGotMessageOnConnectionEstablished;
			}
		}
		songWasStarted = false;
	}

	function onGotMessageOnStart(event) {
		// Receive song name and command sequence.
		var newEvent = new CustomEvent('agSetupEvent', { detail: { song: event.song, commands: event.commands } });
		document.dispatchEvent(newEvent);
		ws.onmessage = onGotMessageOnConnectionEstablished;
		songWasStarted = true;
	}

	function onGotMessageOnConnectionEstablished(event) {
		// Receive user command.
		var newEvent = new CustomEvent('agComandEvent', { detail: { movement: event.movement, time: event.time } });
		document.dispatchEvent(newEvent);
	}

	ws.onopen = onOpen;
	ws.onclose = onClose;
	ws.onmessage = onGotMessageOnStart;
})();
// Рисуем

(function () {

	function refreshComputedSizes(object) {

		canvOpts.computedStyle = {

			width: +object.width.slice(0, -2),
			height: +object.height.slice(0, -2)

		};

		canvas.setDimensions({
			width: canvOpts.computedStyle.width,
			height: canvOpts.computedStyle.height
		});
	}

	window.onresize = function () {
		refreshComputedSizes(canvasComputedStyleObj);
		canvas.renderAll.bind(canvas);
	};

	// Init

	var canvasComputedStyleObj = getComputedStyle(document.querySelectorAll('.wr')[0]);

	var canvOpts = {
		bgURL: '../img/bg-crowd-1.jpg',
		computedStyle: {
			width: +canvasComputedStyleObj.width.slice(0, -2),
			height: +canvasComputedStyleObj.height.slice(0, -2)
		}
	};

	var canvas = new fabric.StaticCanvas('game', {
		width: canvOpts.computedStyle.width,
		height: canvOpts.computedStyle.height
	});
})();

// *** List of UI elements ***
//
// Settings		+
// Score
// Logo				+
// Volume
// Pause

// Socials
//# sourceMappingURL=data:application/json;base64,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QWhDLENBQWI7QUFNQyxDQS9DRCIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBjb25uZWN0aW9uLmpzXG4gKlxuICogU2V0cyBjb25uZWN0aW9uIHRvIHRoZSBzZXJ2ZXIuXG4gKlxuICogRW1pdHMgJ2FnU2V0dXBFdmVudCcgYW5kICdhZ0NvbW1hbmRFdmVudCcgZXZlbnRzIHRoYXQgc2hvdWxkIGJlIGhhbmRsZWQgaW5cbiAqIHRoZSB2aWV3LlxuICogYGBhZ1NldHVwRXZlbnRgYHMgc2V0IHRoZSBzb25nIG5hbWUgYW5kIHRoZSBjb21tYW5kIHNlcXVlbmNlLlxuICogYGBhZ0NvbW1hbmRFdmVudGBgcyBzYXkgd2hpY2ggY29tbWFuZCB1c2VyIHNlbnQuXG4gKi9cblxuKGZ1bmN0aW9uKCkge1xuICAgIC8vIFNldCB0aGUgY29ubmVjdGlvbiB0byB0aGUgbW9iaWxlIGFwcC5cbiAgICB2YXIgaG9zdCA9IFwid3M6Ly9cIiArIHJlc3BvbnNlLmlwICsgXCIvXCI7XG4gICAgdmFyIHdzID0gbmV3IFdlYlNvY2tldChob3N0KTtcbiAgICB2YXIgc29uZ1dhc1N0YXJ0ZWQgPSBmYWxzZTtcblxuICAgIGZ1bmN0aW9uIG9uT3BlbigpIHtcblx0Ly8gQWZ0ZXIgd2UgY29ubmVjdCwgdGhlIHNlcnZlciBzZW5kcyB1cyBkYXRhIHdoaWNoIHdpbGwgYmUgaGFuZGxlZCBpblxuXHQvLyBgYG9ubWVzc2FnZWBgIHNvIHdlIGRvIG5vdGhpbmcgaGVyZS5cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvbkNsb3NlKGV2ZW50KSB7XG5cdGlmICghZS53YXNDbGVhbikge1xuXHQgICAgLy8gUmV0cnkgaWYgY29ubmVjdGlvbiBmYWlsZWQuXG5cdCAgICB3cyA9IG5ldyBXZWJTb2NrZXQoaG9zdCk7XG5cdCAgICB3cy5vbm9wZW4gPSBvbk9wZW47XG5cdCAgICB3cy5vbmNsb3NlID0gb25DbG9zZTtcblx0ICAgIGlmICghc29uZ1dhc1N0YXJ0ZWQpIHtcblx0XHR3cy5vbm1lc3NhZ2UgPSBvbkdvdE1lc3NhZ2VPblN0YXJ0O1xuXHQgICAgfSBlbHNlIHtcblx0XHR3cy5vbm1lc3NhZ2UgPSBvbkdvdE1lc3NhZ2VPbkNvbm5lY3Rpb25Fc3RhYmxpc2hlZDtcblx0ICAgIH1cblx0fVxuXHRzb25nV2FzU3RhcnRlZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG9uR290TWVzc2FnZU9uU3RhcnQoZXZlbnQpIHtcblx0Ly8gUmVjZWl2ZSBzb25nIG5hbWUgYW5kIGNvbW1hbmQgc2VxdWVuY2UuXG5cdHZhciBuZXdFdmVudCA9IG5ldyBDdXN0b21FdmVudChcblx0ICAgICdhZ1NldHVwRXZlbnQnLFxuXHQgICAge2RldGFpbDoge3Nvbmc6IGV2ZW50LnNvbmcsIGNvbW1hbmRzOiBldmVudC5jb21tYW5kc319XG5cdCk7XG5cdGRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3RXZlbnQpO1xuXHR3cy5vbm1lc3NhZ2UgPSBvbkdvdE1lc3NhZ2VPbkNvbm5lY3Rpb25Fc3RhYmxpc2hlZDtcblx0c29uZ1dhc1N0YXJ0ZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG9uR290TWVzc2FnZU9uQ29ubmVjdGlvbkVzdGFibGlzaGVkKGV2ZW50KSB7XG5cdC8vIFJlY2VpdmUgdXNlciBjb21tYW5kLlxuXHR2YXIgbmV3RXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoXG5cdCAgICAnYWdDb21hbmRFdmVudCcsXG5cdCAgICB7ZGV0YWlsOiB7bW92ZW1lbnQ6IGV2ZW50Lm1vdmVtZW50LCB0aW1lOiBldmVudC50aW1lfX1cblx0KTtcblx0ZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChuZXdFdmVudCk7XG4gICAgfVxuXG4gICAgd3Mub25vcGVuID0gb25PcGVuO1xuICAgIHdzLm9uY2xvc2UgPSBvbkNsb3NlO1xuICAgIHdzLm9ubWVzc2FnZSA9IG9uR290TWVzc2FnZU9uU3RhcnQ7XG59KSgpO1xuLy8g0KDQuNGB0YPQtdC8XG5cbihmdW5jdGlvbigpe1xuXG5cbmZ1bmN0aW9uIHJlZnJlc2hDb21wdXRlZFNpemVzKG9iamVjdCkge1xuXHRcblx0Y2Fudk9wdHMuY29tcHV0ZWRTdHlsZSA9IHtcblxuXHRcdHdpZHRoOiArb2JqZWN0LndpZHRoLnNsaWNlKDAsLTIpLFxuXHRcdGhlaWdodDogK29iamVjdC5oZWlnaHQuc2xpY2UoMCwtMilcblx0XG5cdH07XG5cblx0Y2FudmFzLnNldERpbWVuc2lvbnMoe1xuXHRcdHdpZHRoOiBjYW52T3B0cy5jb21wdXRlZFN0eWxlLndpZHRoLFxuXHRcdGhlaWdodDogY2Fudk9wdHMuY29tcHV0ZWRTdHlsZS5oZWlnaHRcblx0fSk7XG5cbn1cblxud2luZG93Lm9ucmVzaXplID0gZnVuY3Rpb24oKXtcblx0cmVmcmVzaENvbXB1dGVkU2l6ZXMoY2FudmFzQ29tcHV0ZWRTdHlsZU9iaik7XG5cdGNhbnZhcy5yZW5kZXJBbGwuYmluZChjYW52YXMpO1xufVxuXG5cblxuXG5cblxuLy8gSW5pdFxuXG52YXIgY2FudmFzQ29tcHV0ZWRTdHlsZU9iaiA9IGdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLndyJylbMF0pO1xuXG52YXIgY2Fudk9wdHMgPSB7XG5cdGJnVVJMOiAnLi4vaW1nL2JnLWNyb3dkLTEuanBnJyxcblx0Y29tcHV0ZWRTdHlsZToge1xuXHRcdHdpZHRoOiArY2FudmFzQ29tcHV0ZWRTdHlsZU9iai53aWR0aC5zbGljZSgwLC0yKSxcblx0XHRoZWlnaHQ6ICtjYW52YXNDb21wdXRlZFN0eWxlT2JqLmhlaWdodC5zbGljZSgwLC0yKVxuXHR9XG59XG5cbnZhciBjYW52YXMgPSBuZXcgZmFicmljLlN0YXRpY0NhbnZhcygnZ2FtZScsIHtcblx0d2lkdGg6IGNhbnZPcHRzLmNvbXB1dGVkU3R5bGUud2lkdGgsXG5cdGhlaWdodDogY2Fudk9wdHMuY29tcHV0ZWRTdHlsZS5oZWlnaHQsXG59KTtcblxuXG59KSgpO1xuXG5cbi8vICoqKiBMaXN0IG9mIFVJIGVsZW1lbnRzICoqKlxuLy8gXG4vLyBTZXR0aW5nc1x0XHQrXG4vLyBTY29yZVxuLy8gTG9nb1x0XHRcdFx0K1xuLy8gVm9sdW1lXG4vLyBQYXVzZVxuXG4vLyBTb2NpYWxzIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
